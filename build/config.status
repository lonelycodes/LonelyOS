#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi



# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error



# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by GRUB $as_me 2.11, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" Makefile grub-core/Makefile grub-core/lib/gnulib/Makefile po/Makefile.in docs/Makefile util/bash-completion.d/Makefile stamp-h config.h"
config_headers=" config-util.h"
config_links=" include/grub/cpu:include/grub/i386 include/grub/machine:include/grub/i386/pc"
config_commands=" depfiles po-directories"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Configuration commands:
$config_commands

Report bugs to <bug-grub@gnu.org>."

ac_cs_config='--disable-werror TARGET_CC=i686-elf-gcc TARGET_OBJCOPY=i686-elf-objcopy TARGET_STRIP=i686-elf-strip TARGET_NM=i686-elf-nm TARGET_RANLIB=i686-elf-ranlib --target=i686-elf target_alias=i686-elf'
ac_cs_version="\
GRUB config.status 2.11
configured by ../grub/configure, generated by GNU Autoconf 2.71,
  with options \"$ac_cs_config\"

Copyright (C) 2021 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/Users/watabo/Projects/LonelyOS/build'
srcdir='../grub'
INSTALL='/usr/bin/install -c'
MKDIR_P='../grub/build-aux/install-sh -c -d'
AWK='awk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    printf "%s\n" "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    printf "%s\n" "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    printf "%s\n" "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh '../grub/configure'  '--disable-werror' 'TARGET_CC=i686-elf-gcc' 'TARGET_OBJCOPY=i686-elf-objcopy' 'TARGET_STRIP=i686-elf-strip' 'TARGET_NM=i686-elf-nm' 'TARGET_RANLIB=i686-elf-ranlib' '--target=i686-elf' 'target_alias=i686-elf' $ac_configure_extra_args --no-create --no-recursion
  shift
  \printf "%s\n" "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  printf "%s\n" "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" MAKE="make"
# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS. But hide it
    # from automake < 1.5.
    eval 'OBSOLETE_ALL_LINGUAS''=""'
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="%UNSET%"



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "config-util.h") CONFIG_HEADERS="$CONFIG_HEADERS config-util.h" ;;
    "po-directories") CONFIG_COMMANDS="$CONFIG_COMMANDS po-directories" ;;
    "include/grub/cpu") CONFIG_LINKS="$CONFIG_LINKS include/grub/cpu:include/grub/$cpudir" ;;
    "include/grub/machine") CONFIG_LINKS="$CONFIG_LINKS include/grub/machine:include/grub/$cpudir/$platform" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "grub-core/Makefile") CONFIG_FILES="$CONFIG_FILES grub-core/Makefile" ;;
    "grub-core/lib/gnulib/Makefile") CONFIG_FILES="$CONFIG_FILES grub-core/lib/gnulib/Makefile" ;;
    "po/Makefile.in") CONFIG_FILES="$CONFIG_FILES po/Makefile.in" ;;
    "docs/Makefile") CONFIG_FILES="$CONFIG_FILES docs/Makefile" ;;
    "util/bash-completion.d/Makefile") CONFIG_FILES="$CONFIG_FILES util/bash-completion.d/Makefile" ;;
    "stamp-h") CONFIG_FILES="$CONFIG_FILES stamp-h" ;;
    "config.h") CONFIG_FILES="$CONFIG_FILES config.h" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files
  test ${CONFIG_HEADERS+y} || CONFIG_HEADERS=$config_headers
  test ${CONFIG_LINKS+y} || CONFIG_LINKS=$config_links
  test ${CONFIG_COMMANDS+y} || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["gltests_LIBOBJDEPS"]=""
S["gltests_LTLIBOBJS"]=""
S["gltests_LIBOBJS"]=""
S["gl_LIBOBJDEPS"]=" ./$(DEPDIR)/asnprintf.Po ./$(DEPDIR)/fnmatch.Po ./$(DEPDIR)/printf-args.Po ./$(DEPDIR)/printf-parse.Po ./$(DEPDIR)/vasnprintf.Po"
S["gl_LTLIBOBJS"]=" asnprintf.lo fnmatch.lo printf-args.lo printf-parse.lo vasnprintf.lo"
S["gl_LIBOBJS"]=" asnprintf.o fnmatch.o printf-args.o printf-parse.o vasnprintf.o"
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["COND_HAVE_EXEC_FALSE"]="#"
S["COND_HAVE_EXEC_TRUE"]=""
S["COND_STARFIELD_FALSE"]=""
S["COND_STARFIELD_TRUE"]="#"
S["COND_HAVE_ASM_USCORE_FALSE"]=""
S["COND_HAVE_ASM_USCORE_TRUE"]="#"
S["COND_HAVE_CXX_FALSE"]="#"
S["COND_HAVE_CXX_TRUE"]=""
S["COND_ENABLE_BOOT_TIME_STATS_FALSE"]=""
S["COND_ENABLE_BOOT_TIME_STATS_TRUE"]="#"
S["COND_ENABLE_CACHE_STATS_FALSE"]=""
S["COND_ENABLE_CACHE_STATS_TRUE"]="#"
S["COND_ENABLE_EFIEMU_FALSE"]=""
S["COND_ENABLE_EFIEMU_TRUE"]="#"
S["COND_APPLE_LINKER_FALSE"]=""
S["COND_APPLE_LINKER_TRUE"]="#"
S["HAVE_FONT_SOURCE"]="0"
S["COND_HAVE_FONT_SOURCE_FALSE"]=""
S["COND_HAVE_FONT_SOURCE_TRUE"]="#"
S["COND_GRUB_MOUNT_FALSE"]=""
S["COND_GRUB_MOUNT_TRUE"]="#"
S["COND_GRUB_MKFONT_FALSE"]=""
S["COND_GRUB_MKFONT_TRUE"]="#"
S["COND_GRUB_EMU_PCI_FALSE"]=""
S["COND_GRUB_EMU_PCI_TRUE"]="#"
S["COND_GRUB_EMU_SDL_FALSE"]=""
S["COND_GRUB_EMU_SDL_TRUE"]="#"
S["COND_MAN_PAGES_FALSE"]=""
S["COND_MAN_PAGES_TRUE"]="#"
S["COND_HOST_ILLUMOS_FALSE"]=""
S["COND_HOST_ILLUMOS_TRUE"]="#"
S["COND_HOST_XNU_FALSE"]="#"
S["COND_HOST_XNU_TRUE"]=""
S["COND_HOST_KFREEBSD_FALSE"]=""
S["COND_HOST_KFREEBSD_TRUE"]="#"
S["COND_HOST_WINDOWS_FALSE"]=""
S["COND_HOST_WINDOWS_TRUE"]="#"
S["COND_HOST_NETBSD_FALSE"]=""
S["COND_HOST_NETBSD_TRUE"]="#"
S["COND_HOST_LINUX_FALSE"]=""
S["COND_HOST_LINUX_TRUE"]="#"
S["COND_HOST_HURD_FALSE"]=""
S["COND_HOST_HURD_TRUE"]="#"
S["COND_x86_64_xen_FALSE"]=""
S["COND_x86_64_xen_TRUE"]="#"
S["COND_x86_64_efi_FALSE"]=""
S["COND_x86_64_efi_TRUE"]="#"
S["COND_sparc64_emu_FALSE"]=""
S["COND_sparc64_emu_TRUE"]="#"
S["COND_sparc64_ieee1275_FALSE"]=""
S["COND_sparc64_ieee1275_TRUE"]="#"
S["COND_riscv64_efi_FALSE"]=""
S["COND_riscv64_efi_TRUE"]="#"
S["COND_riscv32_efi_FALSE"]=""
S["COND_riscv32_efi_TRUE"]="#"
S["COND_riscv64_FALSE"]=""
S["COND_riscv64_TRUE"]="#"
S["COND_riscv32_FALSE"]=""
S["COND_riscv32_TRUE"]="#"
S["COND_powerpc_ieee1275_FALSE"]=""
S["COND_powerpc_ieee1275_TRUE"]="#"
S["COND_mipseb_FALSE"]=""
S["COND_mipseb_TRUE"]="#"
S["COND_mipsel_FALSE"]=""
S["COND_mipsel_TRUE"]="#"
S["COND_mips_qemu_mips_FALSE"]=""
S["COND_mips_qemu_mips_TRUE"]="#"
S["COND_mips_loongson_FALSE"]=""
S["COND_mips_loongson_TRUE"]="#"
S["COND_mips_arc_FALSE"]=""
S["COND_mips_arc_TRUE"]="#"
S["COND_mips_FALSE"]=""
S["COND_mips_TRUE"]="#"
S["COND_i386_xen_pvh_FALSE"]=""
S["COND_i386_xen_pvh_TRUE"]="#"
S["COND_i386_xen_FALSE"]=""
S["COND_i386_xen_TRUE"]="#"
S["COND_i386_multiboot_FALSE"]=""
S["COND_i386_multiboot_TRUE"]="#"
S["COND_i386_coreboot_FALSE"]=""
S["COND_i386_coreboot_TRUE"]="#"
S["COND_i386_ieee1275_FALSE"]=""
S["COND_i386_ieee1275_TRUE"]="#"
S["COND_i386_qemu_FALSE"]=""
S["COND_i386_qemu_TRUE"]="#"
S["COND_i386_efi_FALSE"]=""
S["COND_i386_efi_TRUE"]="#"
S["COND_i386_pc_FALSE"]="#"
S["COND_i386_pc_TRUE"]=""
S["COND_ia64_efi_FALSE"]=""
S["COND_ia64_efi_TRUE"]="#"
S["COND_arm64_efi_FALSE"]=""
S["COND_arm64_efi_TRUE"]="#"
S["COND_arm64_FALSE"]=""
S["COND_arm64_TRUE"]="#"
S["COND_arm_efi_FALSE"]=""
S["COND_arm_efi_TRUE"]="#"
S["COND_arm_coreboot_FALSE"]=""
S["COND_arm_coreboot_TRUE"]="#"
S["COND_arm_uboot_FALSE"]=""
S["COND_arm_uboot_TRUE"]="#"
S["COND_arm_FALSE"]=""
S["COND_arm_TRUE"]="#"
S["COND_emu_FALSE"]=""
S["COND_emu_TRUE"]="#"
S["COND_real_platform_FALSE"]="#"
S["COND_real_platform_TRUE"]=""
S["BUILD_LIBM"]="-lm"
S["HOST_CCASFLAGS"]=""
S["HOST_CPPFLAGS"]=" -Wall -W -DGRUB_UTIL=1 -D_FILE_OFFSET_BITS=64 -I$(top_builddir)/include"
S["HOST_LDFLAGS"]=""
S["HOST_CFLAGS"]="-std=gnu99 -fno-common  -fno-builtin-gettext -Wall -W -Wshadow -Wpointer-arith -Wundef -Wchar-subscripts -Wcomment -Wdeprecated-declarations -Wdisab"\
"led-optimization -Wdiv-by-zero -Wfloat-equal -Wformat-extra-args -Wformat-security -Wformat-y2k -Wimplicit -Wimplicit-function-declaration -Wimplici"\
"t-int -Wmain -Wmissing-braces -Wmissing-format-attribute -Wmultichar -Wparentheses -Wreturn-type -Wsequence-point -Wshadow -Wsign-compare -Wswitch -"\
"Wtrigraphs -Wunknown-pragmas -Wunused -Wunused-function -Wunused-label -Wunused-parameter -Wunused-value  -Wunused-variable -Wwrite-strings -Wnested"\
"-externs -Wstrict-prototypes -Wcast-align  -Wextra -Wattributes -Wendif-labels -Winit-self -Wint-to-pointer-cast -Winvalid-pch -Wmissing-field-initi"\
"alizers -Wnonnull -Woverflow -Wvla -Wpointer-to-int-cast -Wstrict-aliasing -Wvariadic-macros -Wvolatile-register-var -Wpointer-sign -Wmissing-includ"\
"e-dirs -Wmissing-prototypes -Wmissing-declarations -Wformat=2"
S["TARGET_APPLE_LINKER"]="0"
S["TARGET_IMG_BASE_LDOPT"]="-Wl,-Ttext"
S["TARGET_IMG_CFLAGS"]=""
S["TARGET_IMG_LDFLAGS"]="-Wl,-N"
S["TARGET_CCASFLAGS"]=" -m32 -g  -Wa,-mx86-used-note=no -msoft-float"
S["TARGET_CPPFLAGS"]=" -Wall -W  -DGRUB_MACHINE_PCBIOS=1 -DGRUB_MACHINE=I386_PC -m32 -nostdinc -isystem /opt/homebrew/Cellar/i686-elf-gcc/12.2.0/lib/gcc/i686-elf/12.2.0/i"\
"nclude -I$(top_srcdir)/include -I$(top_builddir)/include"
S["TARGET_LDFLAGS"]=" -m32 -Wl,-melf_i386 -Wl,--build-id=none"
S["TARGET_CFLAGS"]="-std=gnu99 -fno-common -Os -m32 -Wall -W -Wshadow -Wpointer-arith -Wundef -Wchar-subscripts -Wcomment -Wdeprecated-declarations -Wdisabled-optimizat"\
"ion -Wdiv-by-zero -Wfloat-equal -Wformat-extra-args -Wformat-security -Wformat-y2k -Wimplicit -Wimplicit-function-declaration -Wimplicit-int -Wmain "\
"-Wmissing-braces -Wmissing-format-attribute -Wmultichar -Wparentheses -Wreturn-type -Wsequence-point -Wshadow -Wsign-compare -Wswitch -Wtrigraphs -W"\
"unknown-pragmas -Wunused -Wunused-function -Wunused-label -Wunused-parameter -Wunused-value  -Wunused-variable -Wwrite-strings -Wnested-externs -Wst"\
"rict-prototypes -g -Wredundant-decls -Wmissing-prototypes -Wmissing-declarations  -Wextra -Wattributes -Wendif-labels -Winit-self -Wint-to-pointer-c"\
"ast -Winvalid-pch -Wmissing-field-initializers -Wnonnull -Woverflow -Wvla -Wpointer-to-int-cast -Wstrict-aliasing -Wvariadic-macros -Wvolatile-regis"\
"ter-var -Wpointer-sign -Wmissing-include-dirs -Wmissing-prototypes -Wmissing-declarations -Wformat=2 -march=i386 -mrtd -mregparm=3 -falign-functions"\
"=1 -falign-loops=1 -falign-jumps=1 -freg-struct-return -mno-mmx -mno-sse -mno-sse2 -mno-sse3 -mno-3dnow -Wa,-mx86-used-note=no -msoft-float -fno-dwa"\
"rf2-cfi-asm -mno-stack-arg-probe -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-ident -fno-stack-protector -Wtrampolines"
S["TARGET_CC_VERSION"]="i686-elf-gcc (GCC) 12.2.0"
S["TARGET_MODULE_FORMAT"]="elf32"
S["TARGET_OBJ2ELF"]=""
S["TARGET_CCAS"]="i686-elf-gcc"
S["TARGET_CPP"]="i686-elf-gcc -E"
S["GRUB_PLATFORM"]="pc"
S["GRUB_TARGET_CPU"]="i386"
S["END_SYMBOL"]="end"
S["BSS_START_SYMBOL"]="__bss_start"
S["HAVE_ASM_USCORE"]="0"
S["GRUB_BOOT_MACHINE_LINK_ADDR"]=""
S["LIBNVPAIR"]=""
S["LIBZFS"]=""
S["LIBLZMA"]=""
S["LIBGEOM"]=""
S["LIBDEVMAPPER"]=""
S["enable_grub_mount"]="no"
S["FUSE_LIBS"]=""
S["FUSE_CFLAGS"]=""
S["FONT_SOURCE"]=""
S["DJVU_FONT_SOURCE"]=""
S["BUILD_FREETYPE_LIBS"]=""
S["BUILD_FREETYPE_CFLAGS"]=""
S["BUILD_WORDS_BIGENDIAN"]="0"
S["BUILD_SIZEOF_VOID_P"]="8"
S["BUILD_SIZEOF_LONG"]="8"
S["enable_grub_mkfont"]="no"
S["FREETYPE_LIBS"]=""
S["FREETYPE_CFLAGS"]=""
S["enable_grub_emu_pci"]="no"
S["enable_grub_emu_sdl"]="no"
S["LIBPCIACCESS"]=""
S["LIBSDL"]=""
S["BOOT_TIME_STATS"]="0"
S["DISK_CACHE_STATS"]="0"
S["MM_DEBUG"]="0"
S["TARGET_NMFLAGS_DEFINED_ONLY"]="--defined-only"
S["TARGET_NMFLAGS_MINUS_P"]="-P"
S["TARGET_LDFLAGS_OLDMAGIC"]="-Wl,-N"
S["EFIEMU64_LINK_FORMAT"]=""
S["enable_efiemu"]="no"
S["TARGET_OBJCONV"]=""
S["BUILD_LDFLAGS"]=""
S["BUILD_CPPFLAGS"]=""
S["BUILD_CFLAGS"]="-std=gnu99 -fno-common "
S["HOST_CC"]="gcc"
S["TARGET_RANLIB"]="i686-elf-ranlib"
S["TARGET_NM"]="i686-elf-nm"
S["TARGET_STRIP"]="i686-elf-strip"
S["TARGET_OBJCOPY"]="i686-elf-objcopy"
S["ac_ct_TARGET_CC"]=""
S["TARGET_CC"]="i686-elf-gcc"
S["LIBGNU_LTLIBDEPS"]=""
S["LIBGNU_LIBDEPS"]=""
S["GL_CFLAG_GNULIB_WARNINGS"]=" -Wno-cast-qual -Wno-conversion -Wno-float-equal -Wno-sign-compare -Wno-undef -Wno-unused-function -Wno-unused-parameter -Wno-float-conversion -Wimp"\
"licit-fallthrough -Wno-pedantic -Wno-sign-conversion -Wno-type-limits"
S["GL_CFLAG_ALLOW_WARNINGS"]="-Wno-error"
S["gltests_WITNESS"]="IN_GRUB_GNULIB_TESTS"
S["GL_COND_OBJ_WMEMPCPY_FALSE"]="#"
S["GL_COND_OBJ_WMEMPCPY_TRUE"]=""
S["GL_COND_OBJ_WMEMCHR_FALSE"]=""
S["GL_COND_OBJ_WMEMCHR_TRUE"]="#"
S["GL_COND_OBJ_WINDOWS_RWLOCK_FALSE"]=""
S["GL_COND_OBJ_WINDOWS_RWLOCK_TRUE"]="#"
S["GL_COND_OBJ_WINDOWS_RECMUTEX_FALSE"]=""
S["GL_COND_OBJ_WINDOWS_RECMUTEX_TRUE"]="#"
S["GL_COND_OBJ_WINDOWS_ONCE_FALSE"]=""
S["GL_COND_OBJ_WINDOWS_ONCE_TRUE"]="#"
S["GL_COND_OBJ_WINDOWS_MUTEX_FALSE"]=""
S["GL_COND_OBJ_WINDOWS_MUTEX_TRUE"]="#"
S["GL_COND_OBJ_WCWIDTH_FALSE"]="#"
S["GL_COND_OBJ_WCWIDTH_TRUE"]=""
S["GL_GNULIB_TOWCTRANS"]="0"
S["GL_GNULIB_WCTRANS"]="0"
S["GL_GNULIB_ISWCTYPE"]="0"
S["GL_GNULIB_WCTYPE"]="0"
S["GL_GNULIB_ISWXDIGIT"]="0"
S["GL_GNULIB_ISWDIGIT"]="0"
S["GL_GNULIB_ISWBLANK"]="0"
S["REPLACE_TOWLOWER"]="0"
S["REPLACE_ISWCNTRL"]="0"
S["HAVE_WCTYPE_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_WCTYPE_H"]="<wctype.h>"
S["NEXT_WCTYPE_H"]="<wctype.h>"
S["HAVE_ISWCNTRL"]="1"
S["REPLACE_ISWXDIGIT"]="0"
S["REPLACE_ISWDIGIT"]="0"
S["REPLACE_ISWBLANK"]="0"
S["HAVE_WCTRANS_T"]="1"
S["HAVE_WCTYPE_T"]="1"
S["HAVE_ISWBLANK"]="1"
S["GL_COND_OBJ_WCRTOMB_FALSE"]=""
S["GL_COND_OBJ_WCRTOMB_TRUE"]="#"
S["HAVE_CRTDEFS_H"]="0"
S["HAVE_WINT_T"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_WCHAR_H"]="<wchar.h>"
S["NEXT_WCHAR_H"]="<wchar.h>"
S["HAVE_FEATURES_H"]="0"
S["LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_FALSE"]="#"
S["LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_TRUE"]=""
S["LIBUNISTRING_UNIWIDTH_H"]="uniwidth.h"
S["LIBUNISTRING_UNITYPES_H"]="unitypes.h"
S["HAVE_UNISTD_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_UNISTD_H"]="<unistd.h>"
S["NEXT_UNISTD_H"]="<unistd.h>"
S["GL_GNULIB_MDA_TZSET"]="1"
S["GL_GNULIB_TZSET"]="0"
S["GL_GNULIB_TIME_RZ"]="0"
S["GL_GNULIB_TIME_R"]="0"
S["GL_GNULIB_TIMESPEC_GETRES"]="0"
S["GL_GNULIB_TIMESPEC_GET"]="0"
S["GL_GNULIB_TIMEGM"]="0"
S["GL_GNULIB_STRPTIME"]="0"
S["GL_GNULIB_STRFTIME"]="0"
S["GL_GNULIB_NANOSLEEP"]="0"
S["GL_GNULIB_LOCALTIME"]="0"
S["GL_GNULIB_MKTIME"]="0"
S["GL_GNULIB_CTIME"]="0"
S["TIME_H_DEFINES_TIME_UTC"]="1"
S["UNISTD_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["PTHREAD_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["SYS_TIME_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["TIME_H_DEFINES_STRUCT_TIMESPEC"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_TIME_H"]="<time.h>"
S["NEXT_TIME_H"]="<time.h>"
S["REPLACE_LOCALTIME"]="0"
S["REPLACE_GMTIME"]="0"
S["GNULIB_GETTIMEOFDAY"]="0"
S["REPLACE_TZSET"]="GNULIB_PORTCHECK"
S["REPLACE_TIMEGM"]="GNULIB_PORTCHECK"
S["REPLACE_STRFTIME"]="GNULIB_PORTCHECK"
S["REPLACE_NANOSLEEP"]="GNULIB_PORTCHECK"
S["REPLACE_MKTIME"]="GNULIB_PORTCHECK"
S["REPLACE_LOCALTIME_R"]="GNULIB_PORTCHECK"
S["REPLACE_CTIME"]="GNULIB_PORTCHECK"
S["HAVE_TIMEZONE_T"]="0"
S["HAVE_TIMESPEC_GETRES"]="1"
S["HAVE_TIMESPEC_GET"]="1"
S["HAVE_TIMEGM"]="1"
S["HAVE_STRPTIME"]="1"
S["HAVE_NANOSLEEP"]="1"
S["HAVE_DECL_LOCALTIME_R"]="1"
S["GL_GENERATE_SYSEXITS_H_FALSE"]=""
S["GL_GENERATE_SYSEXITS_H_TRUE"]="#"
S["SYSEXITS_H"]=""
S["HAVE_SYSEXITS_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYSEXITS_H"]="<sysexits.h>"
S["NEXT_SYSEXITS_H"]="<sysexits.h>"
S["WINDOWS_STAT_INODES"]="0"
S["WINDOWS_64_BIT_OFF_T"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H"]="<sys/types.h>"
S["NEXT_SYS_TYPES_H"]="<sys/types.h>"
S["GL_COND_OBJ_STRNLEN_FALSE"]=""
S["GL_COND_OBJ_STRNLEN_TRUE"]="#"
S["GL_COND_OBJ_STRNDUP_FALSE"]=""
S["GL_COND_OBJ_STRNDUP_TRUE"]="#"
S["GL_GNULIB_FFS"]="0"
S["HAVE_STRINGS_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STRINGS_H"]="<strings.h>"
S["NEXT_STRINGS_H"]="<strings.h>"
S["NEXT_AS_FIRST_DIRECTIVE_STRING_H"]="<string.h>"
S["NEXT_STRING_H"]="<string.h>"
S["GL_COND_OBJ_STRERROR_OVERRIDE_FALSE"]="#"
S["GL_COND_OBJ_STRERROR_OVERRIDE_TRUE"]=""
S["GL_COND_OBJ_STRERROR_FALSE"]="#"
S["GL_COND_OBJ_STRERROR_TRUE"]=""
S["GL_COND_OBJ_STRDUP_FALSE"]=""
S["GL_COND_OBJ_STRDUP_TRUE"]="#"
S["GL_COND_OBJ_STRCHRNUL_FALSE"]="#"
S["GL_COND_OBJ_STRCHRNUL_TRUE"]=""
S["GL_COND_OBJ_STRNCASECMP_FALSE"]=""
S["GL_COND_OBJ_STRNCASECMP_TRUE"]="#"
S["GL_COND_OBJ_STRCASECMP_FALSE"]=""
S["GL_COND_OBJ_STRCASECMP_TRUE"]="#"
S["HAVE_DECL_STRNCASECMP"]="1"
S["HAVE_STRCASECMP"]="1"
S["HAVE_FFS"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STDLIB_H"]="<stdlib.h>"
S["NEXT_STDLIB_H"]="<stdlib.h>"
S["GL_COND_OBJ_STDIO_WRITE_FALSE"]=""
S["GL_COND_OBJ_STDIO_WRITE_TRUE"]="#"
S["GL_COND_OBJ_STDIO_READ_FALSE"]=""
S["GL_COND_OBJ_STDIO_READ_TRUE"]="#"
S["NEXT_AS_FIRST_DIRECTIVE_STDIO_H"]="<stdio.h>"
S["NEXT_STDIO_H"]="<stdio.h>"
S["GL_GENERATE_STDINT_H_FALSE"]="#"
S["GL_GENERATE_STDINT_H_TRUE"]=""
S["STDINT_H"]="stdint.h"
S["GL_GENERATE_STDDEF_H_FALSE"]=""
S["GL_GENERATE_STDDEF_H_TRUE"]="#"
S["STDDEF_H"]=""
S["GL_GENERATE_STDBOOL_H_FALSE"]=""
S["GL_GENERATE_STDBOOL_H_TRUE"]="#"
S["STDBOOL_H"]=""
S["HAVE__BOOL"]="1"
S["GL_GENERATE_STDALIGN_H_FALSE"]=""
S["GL_GENERATE_STDALIGN_H_TRUE"]="#"
S["STDALIGN_H"]=""
S["GL_COND_OBJ_STAT_FALSE"]="#"
S["GL_COND_OBJ_STAT_TRUE"]=""
S["GL_COND_OBJ_SLEEP_FALSE"]=""
S["GL_COND_OBJ_SLEEP_TRUE"]="#"
S["GL_COND_OBJ_SETLOCALE_LOCK_FALSE"]="#"
S["GL_COND_OBJ_SETLOCALE_LOCK_TRUE"]=""
S["GL_COND_OBJ_REGEX_FALSE"]="#"
S["GL_COND_OBJ_REGEX_TRUE"]=""
S["GL_COND_OBJ_REALLOCARRAY_FALSE"]="#"
S["GL_COND_OBJ_REALLOCARRAY_TRUE"]=""
S["GL_COND_OBJ_RAWMEMCHR_FALSE"]="#"
S["GL_COND_OBJ_RAWMEMCHR_TRUE"]=""
S["GL_COND_OBJ_PIPE_FALSE"]=""
S["GL_COND_OBJ_PIPE_TRUE"]="#"
S["GL_COND_OBJ_OPENAT_FALSE"]="#"
S["GL_COND_OBJ_OPENAT_TRUE"]=""
S["GL_COND_OBJ_OPEN_FALSE"]="#"
S["GL_COND_OBJ_OPEN_TRUE"]=""
S["GL_COND_OBJ_NL_LANGINFO_LOCK_FALSE"]=""
S["GL_COND_OBJ_NL_LANGINFO_LOCK_TRUE"]="#"
S["GL_COND_OBJ_NL_LANGINFO_FALSE"]="#"
S["GL_COND_OBJ_NL_LANGINFO_TRUE"]=""
S["LIB_NL_LANGINFO"]=""
S["GL_COND_OBJ_MSVC_NOTHROW_FALSE"]=""
S["GL_COND_OBJ_MSVC_NOTHROW_TRUE"]="#"
S["GL_COND_OBJ_MSVC_INVAL_FALSE"]=""
S["GL_COND_OBJ_MSVC_INVAL_TRUE"]="#"
S["GL_COND_OBJ_MEMRCHR_FALSE"]="#"
S["GL_COND_OBJ_MEMRCHR_TRUE"]=""
S["GL_COND_OBJ_MEMPCPY_FALSE"]="#"
S["GL_COND_OBJ_MEMPCPY_TRUE"]=""
S["GL_GNULIB_MDA_STRDUP"]="1"
S["GL_GNULIB_MDA_MEMCCPY"]="1"
S["GL_GNULIB_STRVERSCMP"]="0"
S["GL_GNULIB_STRSIGNAL"]="0"
S["GL_GNULIB_SIGDESCR_NP"]="0"
S["GL_GNULIB_SIGABBREV_NP"]="0"
S["GL_GNULIB_STRERRORNAME_NP"]="0"
S["GL_GNULIB_STRERROR_R"]="0"
S["GL_GNULIB_STRERROR"]="1"
S["GL_GNULIB_MBSTOK_R"]="0"
S["GL_GNULIB_MBSSEP"]="0"
S["GL_GNULIB_MBSSPN"]="0"
S["GL_GNULIB_MBSPBRK"]="0"
S["GL_GNULIB_MBSCSPN"]="0"
S["GL_GNULIB_MBSCASESTR"]="0"
S["GL_GNULIB_MBSPCASECMP"]="0"
S["GL_GNULIB_MBSNCASECMP"]="0"
S["GL_GNULIB_MBSCASECMP"]="0"
S["GL_GNULIB_MBSSTR"]="0"
S["GL_GNULIB_MBSRCHR"]="0"
S["GL_GNULIB_MBSCHR"]="0"
S["GL_GNULIB_MBSNLEN"]="0"
S["GL_GNULIB_MBSLEN"]="0"
S["GL_GNULIB_STRTOK_R"]="0"
S["GL_GNULIB_STRCASESTR"]="0"
S["GL_GNULIB_STRSTR"]="0"
S["GL_GNULIB_STRSEP"]="0"
S["GL_GNULIB_STRPBRK"]="0"
S["GL_GNULIB_STRNLEN"]="1"
S["GL_GNULIB_STRNDUP"]="1"
S["GL_GNULIB_STRNCAT"]="0"
S["GL_GNULIB_STRDUP"]="1"
S["GL_GNULIB_STRCHRNUL"]="1"
S["GL_GNULIB_STPNCPY"]="0"
S["GL_GNULIB_STPCPY"]="0"
S["GL_GNULIB_RAWMEMCHR"]="1"
S["GL_GNULIB_MEMRCHR"]="1"
S["GL_GNULIB_MEMPCPY"]="1"
S["GL_GNULIB_MEMMEM"]="0"
S["GL_GNULIB_MEMCHR"]="1"
S["GL_GNULIB_FFSLL"]="0"
S["GL_GNULIB_FFSL"]="0"
S["GL_GNULIB_EXPLICIT_BZERO"]="0"
S["GL_COND_OBJ_MEMCHR_FALSE"]=""
S["GL_COND_OBJ_MEMCHR_TRUE"]="#"
S["UNDEFINE_STRTOK_R"]="0"
S["REPLACE_STRSIGNAL"]="0"
S["REPLACE_STRERRORNAME_NP"]="0"
S["REPLACE_STRERROR_R"]="0"
S["REPLACE_STRERROR"]="1"
S["REPLACE_STRTOK_R"]="0"
S["REPLACE_STRCASESTR"]="0"
S["REPLACE_STRSTR"]="0"
S["REPLACE_STRNLEN"]="0"
S["REPLACE_STRNDUP"]="0"
S["REPLACE_STRNCAT"]="0"
S["REPLACE_STRDUP"]="0"
S["REPLACE_STRCHRNUL"]="0"
S["REPLACE_STPNCPY"]="0"
S["REPLACE_MEMMEM"]="0"
S["REPLACE_MEMCHR"]="0"
S["REPLACE_FFSLL"]="0"
S["HAVE_STRVERSCMP"]="1"
S["HAVE_DECL_STRSIGNAL"]="1"
S["HAVE_SIGDESCR_NP"]="1"
S["HAVE_SIGABBREV_NP"]="1"
S["HAVE_STRERRORNAME_NP"]="1"
S["HAVE_DECL_STRERROR_R"]="1"
S["HAVE_DECL_STRTOK_R"]="1"
S["HAVE_STRCASESTR"]="1"
S["HAVE_STRSEP"]="1"
S["HAVE_STRPBRK"]="1"
S["HAVE_DECL_STRNLEN"]="1"
S["HAVE_DECL_STRNDUP"]="1"
S["HAVE_DECL_STRDUP"]="1"
S["HAVE_STRCHRNUL"]="0"
S["HAVE_STPNCPY"]="1"
S["HAVE_STPCPY"]="1"
S["HAVE_RAWMEMCHR"]="0"
S["HAVE_DECL_MEMRCHR"]="0"
S["HAVE_MEMPCPY"]="0"
S["HAVE_DECL_MEMMEM"]="1"
S["HAVE_FFSLL"]="1"
S["HAVE_FFSL"]="1"
S["HAVE_EXPLICIT_BZERO"]="1"
S["HAVE_MBSLEN"]="0"
S["GL_COND_OBJ_MBTOWC_FALSE"]=""
S["GL_COND_OBJ_MBTOWC_TRUE"]="#"
S["GL_COND_OBJ_MBSRTOWCS_FALSE"]=""
S["GL_COND_OBJ_MBSRTOWCS_TRUE"]="#"
S["GL_COND_OBJ_MBSINIT_FALSE"]=""
S["GL_COND_OBJ_MBSINIT_TRUE"]="#"
S["HAVE_VISIBILITY"]="1"
S["CFLAG_VISIBILITY"]="-fvisibility=hidden"
S["GL_COND_OBJ_MBRTOWC_FALSE"]=""
S["GL_COND_OBJ_MBRTOWC_TRUE"]="#"
S["LIB_MBRTOWC"]=""
S["LOCALE_ZH_CN"]="zh_CN.GB18030"
S["LOCALE_FR_UTF8"]="fr_FR.UTF-8"
S["LOCALE_JA"]="ja_JP.eucJP"
S["LTLIBMULTITHREAD"]="-lpthread"
S["LIBMULTITHREAD"]="-lpthread"
S["LTLIBTHREAD"]=""
S["LIBTHREAD"]=""
S["LIBSTDTHREAD"]=""
S["GL_COND_OBJ_LOCALECONV_FALSE"]=""
S["GL_COND_OBJ_LOCALECONV_TRUE"]="#"
S["GL_GNULIB_LOCALENAME"]="0"
S["GL_GNULIB_DUPLOCALE"]="0"
S["GL_GNULIB_SETLOCALE_NULL"]="1"
S["GL_GNULIB_SETLOCALE"]="0"
S["GL_GNULIB_LOCALECONV"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_LOCALE_H"]="<locale.h>"
S["NEXT_LOCALE_H"]="<locale.h>"
S["HAVE_XLOCALE_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STDDEF_H"]=""
S["NEXT_STDDEF_H"]=""
S["HAVE_WCHAR_T"]="1"
S["HAVE_MAX_ALIGN_T"]="1"
S["REPLACE_NULL"]="0"
S["LOCALENAME_ENHANCE_LOCALE_FUNCS"]="0"
S["REPLACE_STRUCT_LCONV"]="0"
S["REPLACE_FREELOCALE"]="0"
S["REPLACE_DUPLOCALE"]="0"
S["REPLACE_NEWLOCALE"]="0"
S["REPLACE_SETLOCALE"]="0"
S["REPLACE_LOCALECONV"]="0"
S["HAVE_FREELOCALE"]="1"
S["HAVE_DUPLOCALE"]="1"
S["HAVE_NEWLOCALE"]="1"
S["LOCALCHARSET_TESTS_ENVIRONMENT"]=""
S["GL_GENERATE_LIMITS_H_FALSE"]="#"
S["GL_GENERATE_LIMITS_H_TRUE"]=""
S["LIMITS_H"]="limits.h"
S["GL_GNULIB_NL_LANGINFO"]="1"
S["HAVE_LANGINFO_YESEXPR"]="1"
S["HAVE_LANGINFO_ERA"]="1"
S["HAVE_LANGINFO_ALTMON"]="0"
S["HAVE_LANGINFO_T_FMT_AMPM"]="1"
S["HAVE_LANGINFO_CODESET"]="1"
S["HAVE_LANGINFO_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_LANGINFO_H"]="<langinfo.h>"
S["NEXT_LANGINFO_H"]="<langinfo.h>"
S["REPLACE_NL_LANGINFO"]="1"
S["HAVE_NL_LANGINFO"]="1"
S["GL_COND_OBJ_ISBLANK_FALSE"]=""
S["GL_COND_OBJ_ISBLANK_TRUE"]="#"
S["GL_GNULIB_STRTOUMAX"]="0"
S["GL_GNULIB_STRTOIMAX"]="0"
S["GL_GNULIB_IMAXDIV"]="0"
S["GL_GNULIB_IMAXABS"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H"]="<inttypes.h>"
S["NEXT_INTTYPES_H"]="<inttypes.h>"
S["UINT64_MAX_EQ_ULONG_MAX"]="defined _LP64"
S["UINT32_MAX_LT_UINTMAX_MAX"]="1"
S["PRIPTR_PREFIX"]="__PRIPTR_PREFIX"
S["INT64_MAX_EQ_LONG_MAX"]="defined _LP64"
S["INT32_MAX_LT_INTMAX_MAX"]="1"
S["REPLACE_STRTOUMAX"]="0"
S["REPLACE_STRTOIMAX"]="0"
S["HAVE_IMAXDIV_T"]="1"
S["HAVE_DECL_STRTOUMAX"]="1"
S["HAVE_DECL_STRTOIMAX"]="1"
S["HAVE_DECL_IMAXDIV"]="1"
S["HAVE_DECL_IMAXABS"]="1"
S["HAVE_SYS_INTTYPES_H"]="0"
S["HAVE_SYS_BITYPES_H"]="0"
S["HAVE_C99_STDINT_H"]="1"
S["WINT_T_SUFFIX"]=""
S["WCHAR_T_SUFFIX"]=""
S["SIG_ATOMIC_T_SUFFIX"]=""
S["SIZE_T_SUFFIX"]=""
S["PTRDIFF_T_SUFFIX"]=""
S["HAVE_SIGNED_WINT_T"]=""
S["HAVE_SIGNED_WCHAR_T"]=""
S["HAVE_SIGNED_SIG_ATOMIC_T"]=""
S["BITSIZEOF_WINT_T"]=""
S["BITSIZEOF_WCHAR_T"]=""
S["BITSIZEOF_SIG_ATOMIC_T"]=""
S["BITSIZEOF_SIZE_T"]=""
S["BITSIZEOF_PTRDIFF_T"]=""
S["APPLE_UNIVERSAL_BUILD"]="0"
S["HAVE_STDINT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STDINT_H"]="<stdint.h>"
S["NEXT_STDINT_H"]="<stdint.h>"
S["HAVE_SYS_TYPES_H"]="1"
S["HAVE_INTTYPES_H"]="1"
S["HAVE_WCHAR_H"]="1"
S["GNULIBHEADERS_OVERRIDE_WINT_T"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_LIMITS_H"]="<limits.h>"
S["NEXT_LIMITS_H"]="<limits.h>"
S["LIB_HARD_LOCALE"]=""
S["LIB_SETLOCALE_NULL"]=""
S["LIB_SCHED_YIELD"]=""
S["LIBPMULTITHREAD"]="-lpthread"
S["LIBPTHREAD"]=""
S["GL_COND_OBJ_GETOPT_FALSE"]="#"
S["GL_COND_OBJ_GETOPT_TRUE"]=""
S["GL_GENERATE_GETOPT_CDEFS_H_FALSE"]="#"
S["GL_GENERATE_GETOPT_CDEFS_H_TRUE"]=""
S["GETOPT_CDEFS_H"]="getopt-cdefs.h"
S["GL_GENERATE_GETOPT_H_FALSE"]="#"
S["GL_GENERATE_GETOPT_H_TRUE"]=""
S["GETOPT_H"]="getopt.h"
S["HAVE_SYS_CDEFS_H"]="1"
S["HAVE_GETOPT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_GETOPT_H"]="<getopt.h>"
S["NEXT_GETOPT_H"]="<getopt.h>"
S["GL_COND_OBJ_GETLINE_FALSE"]=""
S["GL_COND_OBJ_GETLINE_TRUE"]="#"
S["GL_COND_OBJ_GETDTABLESIZE_FALSE"]=""
S["GL_COND_OBJ_GETDTABLESIZE_TRUE"]="#"
S["GL_GNULIB_MDA_TEMPNAM"]="1"
S["GL_GNULIB_MDA_PUTW"]="1"
S["GL_GNULIB_MDA_GETW"]="1"
S["GL_GNULIB_MDA_FILENO"]="1"
S["GL_GNULIB_MDA_FDOPEN"]="1"
S["GL_GNULIB_MDA_FCLOSEALL"]="1"
S["GL_GNULIB_VSPRINTF_POSIX"]="0"
S["GL_GNULIB_VSNPRINTF"]="1"
S["GL_GNULIB_VPRINTF_POSIX"]="0"
S["GL_GNULIB_VPRINTF"]="1"
S["GL_GNULIB_VFPRINTF_POSIX"]="0"
S["GL_GNULIB_VFPRINTF"]="1"
S["GL_GNULIB_VDPRINTF"]="0"
S["GL_GNULIB_VSCANF"]="0"
S["GL_GNULIB_VFSCANF"]="0"
S["GL_GNULIB_VASPRINTF"]="0"
S["GL_GNULIB_TMPFILE"]="0"
S["GL_GNULIB_STDIO_H_SIGPIPE"]="0"
S["GL_GNULIB_STDIO_H_NONBLOCKING"]="0"
S["GL_GNULIB_SPRINTF_POSIX"]="0"
S["GL_GNULIB_SNPRINTF"]="0"
S["GL_GNULIB_SCANF"]="1"
S["GL_GNULIB_RENAMEAT"]="0"
S["GL_GNULIB_RENAME"]="0"
S["GL_GNULIB_REMOVE"]="0"
S["GL_GNULIB_PUTS"]="1"
S["GL_GNULIB_PUTCHAR"]="1"
S["GL_GNULIB_PUTC"]="1"
S["GL_GNULIB_PRINTF_POSIX"]="0"
S["GL_GNULIB_PRINTF"]="1"
S["GL_GNULIB_POPEN"]="0"
S["GL_GNULIB_PERROR"]="0"
S["GL_GNULIB_PCLOSE"]="0"
S["GL_GNULIB_OBSTACK_PRINTF_POSIX"]="0"
S["GL_GNULIB_OBSTACK_PRINTF"]="0"
S["GL_GNULIB_GETLINE"]="1"
S["GL_GNULIB_GETDELIM"]="1"
S["GL_GNULIB_GETCHAR"]="1"
S["GL_GNULIB_GETC"]="1"
S["GL_GNULIB_FWRITE"]="1"
S["GL_GNULIB_FTELLO"]="0"
S["GL_GNULIB_FTELL"]="0"
S["GL_GNULIB_FSEEKO"]="0"
S["GL_GNULIB_FSEEK"]="0"
S["GL_GNULIB_FSCANF"]="1"
S["GL_GNULIB_FREOPEN"]="0"
S["GL_GNULIB_FREAD"]="1"
S["GL_GNULIB_FPUTS"]="1"
S["GL_GNULIB_FPUTC"]="1"
S["GL_GNULIB_FPURGE"]="0"
S["GL_GNULIB_FPRINTF_POSIX"]="0"
S["GL_GNULIB_FPRINTF"]="1"
S["GL_GNULIB_FOPEN_GNU"]="0"
S["GL_GNULIB_FOPEN"]="0"
S["GL_GNULIB_FGETS"]="1"
S["GL_GNULIB_FGETC"]="1"
S["GL_GNULIB_FFLUSH"]="0"
S["GL_GNULIB_FDOPEN"]="0"
S["GL_GNULIB_FCLOSE"]="0"
S["GL_GNULIB_DPRINTF"]="0"
S["GL_COND_OBJ_GETDELIM_FALSE"]=""
S["GL_COND_OBJ_GETDELIM_TRUE"]="#"
S["REPLACE_VSPRINTF"]="0"
S["REPLACE_VSNPRINTF"]="0"
S["REPLACE_VPRINTF"]="0"
S["REPLACE_VFPRINTF"]="0"
S["REPLACE_VDPRINTF"]="0"
S["REPLACE_VASPRINTF"]="0"
S["REPLACE_TMPFILE"]="0"
S["REPLACE_STDIO_WRITE_FUNCS"]="0"
S["REPLACE_STDIO_READ_FUNCS"]="0"
S["REPLACE_SPRINTF"]="0"
S["REPLACE_SNPRINTF"]="0"
S["REPLACE_RENAMEAT"]="0"
S["REPLACE_RENAME"]="0"
S["REPLACE_REMOVE"]="0"
S["REPLACE_PRINTF"]="0"
S["REPLACE_POPEN"]="0"
S["REPLACE_PERROR"]="0"
S["REPLACE_OBSTACK_PRINTF"]="0"
S["REPLACE_GETLINE"]="0"
S["REPLACE_GETDELIM"]="0"
S["REPLACE_FTELLO"]="0"
S["REPLACE_FTELL"]="0"
S["REPLACE_FSEEKO"]="0"
S["REPLACE_FSEEK"]="0"
S["REPLACE_FREOPEN"]="0"
S["REPLACE_FPURGE"]="0"
S["REPLACE_FPRINTF"]="0"
S["REPLACE_FOPEN_FOR_FOPEN_GNU"]="0"
S["REPLACE_FOPEN"]="0"
S["REPLACE_FFLUSH"]="0"
S["REPLACE_FDOPEN"]="0"
S["REPLACE_FCLOSE"]="0"
S["REPLACE_DPRINTF"]="0"
S["HAVE_VDPRINTF"]="1"
S["HAVE_VASPRINTF"]="1"
S["HAVE_RENAMEAT"]="1"
S["HAVE_POPEN"]="1"
S["HAVE_PCLOSE"]="1"
S["HAVE_FTELLO"]="1"
S["HAVE_FSEEKO"]="1"
S["HAVE_DPRINTF"]="1"
S["HAVE_DECL_VSNPRINTF"]="1"
S["HAVE_DECL_SNPRINTF"]="1"
S["HAVE_DECL_OBSTACK_PRINTF"]="1"
S["HAVE_DECL_GETLINE"]="1"
S["HAVE_DECL_GETDELIM"]="1"
S["HAVE_DECL_FTELLO"]="1"
S["HAVE_DECL_FSEEKO"]="1"
S["HAVE_DECL_FPURGE"]="1"
S["HAVE_DECL_FCLOSEALL"]="0"
S["GL_COND_OBJ_GETCWD_LGPL_FALSE"]=""
S["GL_COND_OBJ_GETCWD_LGPL_TRUE"]="#"
S["GL_GNULIB_MDA_UMASK"]="1"
S["GL_GNULIB_MDA_MKDIR"]="1"
S["GL_GNULIB_MDA_CHMOD"]="1"
S["GL_GNULIB_OVERRIDES_STRUCT_STAT"]="0"
S["GL_GNULIB_UTIMENSAT"]="0"
S["GL_GNULIB_STAT"]="1"
S["GL_GNULIB_MKNODAT"]="0"
S["GL_GNULIB_MKNOD"]="0"
S["GL_GNULIB_MKFIFOAT"]="0"
S["GL_GNULIB_MKFIFO"]="0"
S["GL_GNULIB_MKDIRAT"]="0"
S["GL_GNULIB_MKDIR"]="0"
S["GL_GNULIB_LSTAT"]="0"
S["GL_GNULIB_LCHMOD"]="0"
S["GL_GNULIB_GETUMASK"]="0"
S["GL_GNULIB_FUTIMENS"]="0"
S["GL_GNULIB_FSTATAT"]="0"
S["GL_GNULIB_FSTAT"]="1"
S["GL_GNULIB_FCHMODAT"]="0"
S["WINDOWS_64_BIT_ST_SIZE"]="0"
S["WINDOWS_STAT_TIMESPEC"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H"]="<sys/stat.h>"
S["NEXT_SYS_STAT_H"]="<sys/stat.h>"
S["GL_COND_OBJ_FSTAT_FALSE"]=""
S["GL_COND_OBJ_FSTAT_TRUE"]="#"
S["REPLACE_UTIMENSAT"]="0"
S["REPLACE_STAT"]="1"
S["REPLACE_MKNODAT"]="0"
S["REPLACE_MKNOD"]="0"
S["REPLACE_MKFIFOAT"]="0"
S["REPLACE_MKFIFO"]="0"
S["REPLACE_MKDIR"]="0"
S["REPLACE_LSTAT"]="0"
S["REPLACE_FUTIMENS"]="0"
S["REPLACE_FSTATAT"]="0"
S["REPLACE_FSTAT"]="0"
S["REPLACE_FCHMODAT"]="0"
S["HAVE_UTIMENSAT"]="1"
S["HAVE_MKNODAT"]="1"
S["HAVE_MKNOD"]="1"
S["HAVE_MKFIFOAT"]="1"
S["HAVE_MKFIFO"]="1"
S["HAVE_MKDIRAT"]="1"
S["HAVE_LSTAT"]="1"
S["HAVE_LCHMOD"]="1"
S["HAVE_GETUMASK"]="1"
S["HAVE_FUTIMENS"]="1"
S["HAVE_FSTATAT"]="1"
S["HAVE_FCHMODAT"]="1"
S["GL_COND_OBJ_FREE_FALSE"]="#"
S["GL_COND_OBJ_FREE_TRUE"]=""
S["GL_GENERATE_FNMATCH_H_FALSE"]="#"
S["GL_GENERATE_FNMATCH_H_TRUE"]=""
S["FNMATCH_H"]="fnmatch.h"
S["GL_GNULIB_FNMATCH"]="1"
S["HAVE_FNMATCH_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_FNMATCH_H"]="<fnmatch.h>"
S["NEXT_FNMATCH_H"]="<fnmatch.h>"
S["REPLACE_FNMATCH"]="1"
S["HAVE_FNMATCH"]="1"
S["GL_COND_OBJ_ITOLD_FALSE"]=""
S["GL_COND_OBJ_ITOLD_TRUE"]="#"
S["GL_COND_OBJ_FLOAT_FALSE"]=""
S["GL_COND_OBJ_FLOAT_TRUE"]="#"
S["GL_GENERATE_FLOAT_H_FALSE"]=""
S["GL_GENERATE_FLOAT_H_TRUE"]="#"
S["FLOAT_H"]=""
S["REPLACE_ITOLD"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_FLOAT_H"]=""
S["NEXT_FLOAT_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_FCNTL_H"]="<fcntl.h>"
S["NEXT_FCNTL_H"]="<fcntl.h>"
S["GL_GNULIB_MDA_OPEN"]="1"
S["GL_GNULIB_MDA_CREAT"]="1"
S["GL_GNULIB_OPENAT"]="1"
S["GL_GNULIB_OPEN"]="1"
S["GL_GNULIB_NONBLOCKING"]="0"
S["GL_GNULIB_FCNTL"]="1"
S["GL_GNULIB_CREAT"]="0"
S["GL_COND_OBJ_FCNTL_FALSE"]=""
S["GL_COND_OBJ_FCNTL_TRUE"]="#"
S["REPLACE_OPENAT"]="1"
S["REPLACE_OPEN"]="1"
S["REPLACE_FCNTL"]="0"
S["REPLACE_CREAT"]="0"
S["HAVE_OPENAT"]="1"
S["HAVE_FCNTL"]="1"
S["GL_COND_OBJ_FCHDIR_FALSE"]=""
S["GL_COND_OBJ_FCHDIR_TRUE"]="#"
S["GL_COND_OBJ_ERROR_FALSE"]="#"
S["GL_COND_OBJ_ERROR_TRUE"]=""
S["GL_GENERATE_ERRNO_H_FALSE"]=""
S["GL_GENERATE_ERRNO_H_TRUE"]="#"
S["ERRNO_H"]=""
S["EOVERFLOW_VALUE"]=""
S["EOVERFLOW_HIDDEN"]=""
S["ENOLINK_VALUE"]=""
S["ENOLINK_HIDDEN"]=""
S["EMULTIHOP_VALUE"]=""
S["EMULTIHOP_HIDDEN"]=""
S["NEXT_AS_FIRST_DIRECTIVE_ERRNO_H"]=""
S["NEXT_ERRNO_H"]=""
S["GL_COND_OBJ_DUP2_FALSE"]=""
S["GL_COND_OBJ_DUP2_TRUE"]="#"
S["GL_COND_OBJ_DIRFD_FALSE"]=""
S["GL_COND_OBJ_DIRFD_TRUE"]="#"
S["GL_GNULIB_ALPHASORT"]="0"
S["GL_GNULIB_SCANDIR"]="0"
S["GL_GNULIB_FDOPENDIR"]="0"
S["GL_GNULIB_DIRFD"]="1"
S["GL_GNULIB_CLOSEDIR"]="0"
S["GL_GNULIB_REWINDDIR"]="0"
S["GL_GNULIB_READDIR"]="0"
S["GL_GNULIB_OPENDIR"]="0"
S["HAVE_DIRENT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_DIRENT_H"]="<dirent.h>"
S["NEXT_DIRENT_H"]="<dirent.h>"
S["REPLACE_FDOPENDIR"]="0"
S["REPLACE_DIRFD"]="0"
S["REPLACE_CLOSEDIR"]="0"
S["REPLACE_OPENDIR"]="0"
S["HAVE_ALPHASORT"]="1"
S["HAVE_SCANDIR"]="1"
S["HAVE_FDOPENDIR"]="1"
S["HAVE_DECL_FDOPENDIR"]="1"
S["HAVE_DECL_DIRFD"]="1"
S["HAVE_CLOSEDIR"]="1"
S["HAVE_REWINDDIR"]="1"
S["HAVE_READDIR"]="1"
S["HAVE_OPENDIR"]="1"
S["GL_GNULIB_ISBLANK"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_CTYPE_H"]="<ctype.h>"
S["NEXT_CTYPE_H"]="<ctype.h>"
S["PRAGMA_COLUMNS"]=""
S["PRAGMA_SYSTEM_HEADER"]="#pragma GCC system_header"
S["INCLUDE_NEXT_AS_FIRST_DIRECTIVE"]="include_next"
S["INCLUDE_NEXT"]="include_next"
S["HAVE_ISBLANK"]="1"
S["GL_COND_OBJ_CLOSE_FALSE"]=""
S["GL_COND_OBJ_CLOSE_TRUE"]="#"
S["HAVE_WINSOCK2_H"]="0"
S["HAVE_MSVC_INVALID_PARAMETER_HANDLER"]="0"
S["GL_COND_OBJ_CHDIR_LONG_FALSE"]="#"
S["GL_COND_OBJ_CHDIR_LONG_TRUE"]=""
S["UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS"]="0"
S["UNISTD_H_HAVE_WINSOCK2_H"]="0"
S["UNISTD_H_HAVE_SYS_RANDOM_H"]="0"
S["REPLACE_WRITE"]="0"
S["REPLACE_USLEEP"]="0"
S["REPLACE_UNLINKAT"]="0"
S["REPLACE_UNLINK"]="0"
S["REPLACE_TTYNAME_R"]="0"
S["REPLACE_TRUNCATE"]="0"
S["REPLACE_SYMLINKAT"]="0"
S["REPLACE_SYMLINK"]="0"
S["REPLACE_SLEEP"]="0"
S["REPLACE_RMDIR"]="0"
S["REPLACE_READLINKAT"]="0"
S["REPLACE_READLINK"]="0"
S["REPLACE_READ"]="0"
S["REPLACE_PWRITE"]="0"
S["REPLACE_PREAD"]="0"
S["REPLACE_LSEEK"]="0"
S["REPLACE_LINKAT"]="0"
S["REPLACE_LINK"]="0"
S["REPLACE_LCHOWN"]="0"
S["REPLACE_ISATTY"]="0"
S["REPLACE_GETPASS_FOR_GETPASS_GNU"]="0"
S["REPLACE_GETPASS"]="0"
S["REPLACE_GETPAGESIZE"]="0"
S["REPLACE_GETGROUPS"]="0"
S["REPLACE_GETLOGIN_R"]="0"
S["REPLACE_GETDTABLESIZE"]="0"
S["REPLACE_GETDOMAINNAME"]="0"
S["REPLACE_GETCWD"]="0"
S["REPLACE_FTRUNCATE"]="0"
S["REPLACE_FCHOWNAT"]="0"
S["REPLACE_FACCESSAT"]="0"
S["REPLACE_EXECVPE"]="0"
S["REPLACE_EXECVP"]="0"
S["REPLACE_EXECVE"]="0"
S["REPLACE_EXECV"]="0"
S["REPLACE_EXECLP"]="0"
S["REPLACE_EXECLE"]="0"
S["REPLACE_EXECL"]="0"
S["REPLACE_DUP2"]="0"
S["REPLACE_DUP"]="0"
S["REPLACE_COPY_FILE_RANGE"]="0"
S["REPLACE_CLOSE"]="0"
S["REPLACE_CHOWN"]="0"
S["REPLACE_ACCESS"]="0"
S["HAVE_SYS_PARAM_H"]="0"
S["HAVE_OS_H"]="0"
S["HAVE_DECL_TTYNAME_R"]="1"
S["HAVE_DECL_TRUNCATE"]="1"
S["HAVE_DECL_SETHOSTNAME"]="1"
S["HAVE_DECL_GETUSERSHELL"]="1"
S["HAVE_DECL_GETPAGESIZE"]="1"
S["HAVE_DECL_GETLOGIN_R"]="1"
S["HAVE_DECL_GETLOGIN"]="1"
S["HAVE_DECL_GETDOMAINNAME"]="1"
S["HAVE_DECL_FDATASYNC"]="1"
S["HAVE_DECL_FCHDIR"]="1"
S["HAVE_DECL_EXECVPE"]="0"
S["HAVE_DECL_ENVIRON"]="1"
S["HAVE_USLEEP"]="1"
S["HAVE_UNLINKAT"]="1"
S["HAVE_SYMLINKAT"]="1"
S["HAVE_SYMLINK"]="1"
S["HAVE_SLEEP"]="1"
S["HAVE_SETHOSTNAME"]="1"
S["HAVE_READLINKAT"]="1"
S["HAVE_READLINK"]="1"
S["HAVE_PWRITE"]="1"
S["HAVE_PREAD"]="1"
S["HAVE_PIPE2"]="1"
S["HAVE_PIPE"]="1"
S["HAVE_LINKAT"]="1"
S["HAVE_LINK"]="1"
S["HAVE_LCHOWN"]="1"
S["HAVE_GROUP_MEMBER"]="1"
S["HAVE_GETPASS"]="1"
S["HAVE_GETPAGESIZE"]="1"
S["HAVE_GETLOGIN"]="1"
S["HAVE_GETHOSTNAME"]="1"
S["HAVE_GETGROUPS"]="1"
S["HAVE_GETENTROPY"]="1"
S["HAVE_GETDTABLESIZE"]="1"
S["HAVE_FTRUNCATE"]="1"
S["HAVE_FSYNC"]="1"
S["HAVE_FDATASYNC"]="1"
S["HAVE_FCHOWNAT"]="1"
S["HAVE_FCHDIR"]="1"
S["HAVE_FACCESSAT"]="1"
S["HAVE_EXECVPE"]="1"
S["HAVE_EUIDACCESS"]="1"
S["HAVE_DUP3"]="1"
S["HAVE_COPY_FILE_RANGE"]="1"
S["HAVE_CHOWN"]="1"
S["GL_GNULIB_MDA_WRITE"]="1"
S["GL_GNULIB_MDA_UNLINK"]="1"
S["GL_GNULIB_MDA_SWAB"]="1"
S["GL_GNULIB_MDA_RMDIR"]="1"
S["GL_GNULIB_MDA_READ"]="1"
S["GL_GNULIB_MDA_LSEEK"]="1"
S["GL_GNULIB_MDA_ISATTY"]="1"
S["GL_GNULIB_MDA_GETPID"]="1"
S["GL_GNULIB_MDA_GETCWD"]="1"
S["GL_GNULIB_MDA_EXECVPE"]="1"
S["GL_GNULIB_MDA_EXECVP"]="1"
S["GL_GNULIB_MDA_EXECVE"]="1"
S["GL_GNULIB_MDA_EXECV"]="1"
S["GL_GNULIB_MDA_EXECLP"]="1"
S["GL_GNULIB_MDA_EXECLE"]="1"
S["GL_GNULIB_MDA_EXECL"]="1"
S["GL_GNULIB_MDA_DUP2"]="1"
S["GL_GNULIB_MDA_DUP"]="1"
S["GL_GNULIB_MDA_CLOSE"]="1"
S["GL_GNULIB_MDA_CHDIR"]="1"
S["GL_GNULIB_MDA_ACCESS"]="1"
S["GL_GNULIB_WRITE"]="0"
S["GL_GNULIB_USLEEP"]="0"
S["GL_GNULIB_UNLINKAT"]="0"
S["GL_GNULIB_UNLINK"]="0"
S["GL_GNULIB_UNISTD_H_SIGPIPE"]="0"
S["GL_GNULIB_UNISTD_H_NONBLOCKING"]="0"
S["GL_GNULIB_UNISTD_H_GETOPT"]="1"
S["GL_GNULIB_TTYNAME_R"]="0"
S["GL_GNULIB_TRUNCATE"]="0"
S["GL_GNULIB_SYMLINKAT"]="0"
S["GL_GNULIB_SYMLINK"]="0"
S["GL_GNULIB_SLEEP"]="1"
S["GL_GNULIB_SETHOSTNAME"]="0"
S["GL_GNULIB_RMDIR"]="0"
S["GL_GNULIB_READLINKAT"]="0"
S["GL_GNULIB_READLINK"]="0"
S["GL_GNULIB_READ"]="0"
S["GL_GNULIB_PWRITE"]="0"
S["GL_GNULIB_PREAD"]="0"
S["GL_GNULIB_PIPE2"]="0"
S["GL_GNULIB_PIPE"]="1"
S["GL_GNULIB_LSEEK"]="0"
S["GL_GNULIB_LINKAT"]="0"
S["GL_GNULIB_LINK"]="0"
S["GL_GNULIB_LCHOWN"]="0"
S["GL_GNULIB_ISATTY"]="0"
S["GL_GNULIB_GROUP_MEMBER"]="0"
S["GL_GNULIB_GETUSERSHELL"]="0"
S["GL_GNULIB_GETPASS_GNU"]="0"
S["GL_GNULIB_GETPASS"]="0"
S["GL_GNULIB_GETPAGESIZE"]="0"
S["GL_GNULIB_GETOPT_POSIX"]="1"
S["GL_GNULIB_GETLOGIN_R"]="0"
S["GL_GNULIB_GETLOGIN"]="0"
S["GL_GNULIB_GETHOSTNAME"]="0"
S["GL_GNULIB_GETGROUPS"]="0"
S["GL_GNULIB_GETENTROPY"]="0"
S["GL_GNULIB_GETDTABLESIZE"]="1"
S["GL_GNULIB_GETDOMAINNAME"]="0"
S["GL_GNULIB_GETCWD"]="1"
S["GL_GNULIB_FTRUNCATE"]="0"
S["GL_GNULIB_FSYNC"]="0"
S["GL_GNULIB_FDATASYNC"]="0"
S["GL_GNULIB_FCHOWNAT"]="0"
S["GL_GNULIB_FCHDIR"]="1"
S["GL_GNULIB_FACCESSAT"]="0"
S["GL_GNULIB_EXECVPE"]="0"
S["GL_GNULIB_EXECVP"]="0"
S["GL_GNULIB_EXECVE"]="0"
S["GL_GNULIB_EXECV"]="0"
S["GL_GNULIB_EXECLP"]="0"
S["GL_GNULIB_EXECLE"]="0"
S["GL_GNULIB_EXECL"]="0"
S["GL_GNULIB_EUIDACCESS"]="0"
S["GL_GNULIB_ENVIRON"]="0"
S["GL_GNULIB_DUP3"]="0"
S["GL_GNULIB_DUP2"]="1"
S["GL_GNULIB_DUP"]="0"
S["GL_GNULIB_COPY_FILE_RANGE"]="0"
S["GL_GNULIB_CLOSE"]="1"
S["GL_GNULIB_CHOWN"]="0"
S["GL_GNULIB_CHDIR"]="1"
S["GL_GNULIB_ACCESS"]="0"
S["REPLACE_WCTOMB"]="0"
S["REPLACE_UNSETENV"]="0"
S["REPLACE_STRTOULL"]="0"
S["REPLACE_STRTOUL"]="0"
S["REPLACE_STRTOLL"]="0"
S["REPLACE_STRTOLD"]="0"
S["REPLACE_STRTOL"]="0"
S["REPLACE_STRTOD"]="0"
S["REPLACE_SETSTATE"]="0"
S["REPLACE_SETENV"]="0"
S["REPLACE_REALPATH"]="0"
S["REPLACE_REALLOCARRAY"]="0"
S["REPLACE_REALLOC_FOR_REALLOC_POSIX"]="0"
S["REPLACE_REALLOC_FOR_REALLOC_GNU"]="0"
S["REPLACE_RANDOM_R"]="0"
S["REPLACE_RANDOM"]="0"
S["REPLACE_QSORT_R"]="0"
S["REPLACE_PUTENV"]="0"
S["REPLACE_PTSNAME_R"]="0"
S["REPLACE_PTSNAME"]="0"
S["REPLACE_POSIX_MEMALIGN"]="0"
S["REPLACE_MKSTEMP"]="0"
S["REPLACE_MBTOWC"]="0"
S["REPLACE_MALLOC_FOR_MALLOC_POSIX"]="0"
S["REPLACE_MALLOC_FOR_MALLOC_GNU"]="0"
S["REPLACE_INITSTATE"]="0"
S["REPLACE_FREE"]="1"
S["REPLACE_CANONICALIZE_FILE_NAME"]="0"
S["REPLACE_CALLOC_FOR_CALLOC_POSIX"]="0"
S["REPLACE_CALLOC_FOR_CALLOC_GNU"]="0"
S["REPLACE_ALIGNED_ALLOC"]="0"
S["HAVE_DECL_UNSETENV"]="1"
S["HAVE_UNLOCKPT"]="1"
S["HAVE_SYS_LOADAVG_H"]="0"
S["HAVE_STRUCT_RANDOM_DATA"]="1"
S["HAVE_STRTOULL"]="1"
S["HAVE_STRTOUL"]="1"
S["HAVE_STRTOLL"]="1"
S["HAVE_STRTOLD"]="1"
S["HAVE_STRTOL"]="1"
S["HAVE_STRTOD"]="1"
S["HAVE_DECL_SETSTATE"]="1"
S["HAVE_SETSTATE"]="1"
S["HAVE_DECL_SETENV"]="1"
S["HAVE_SETENV"]="1"
S["HAVE_SECURE_GETENV"]="1"
S["HAVE_RPMATCH"]="1"
S["HAVE_REALPATH"]="1"
S["HAVE_REALLOCARRAY"]="0"
S["HAVE_RANDOM_R"]="1"
S["HAVE_RANDOM_H"]="1"
S["HAVE_RANDOM"]="1"
S["HAVE_QSORT_R"]="1"
S["HAVE_PTSNAME_R"]="1"
S["HAVE_PTSNAME"]="1"
S["HAVE_POSIX_OPENPT"]="1"
S["HAVE_POSIX_MEMALIGN"]="1"
S["HAVE_MKSTEMPS"]="1"
S["HAVE_MKSTEMP"]="1"
S["HAVE_MKOSTEMPS"]="1"
S["HAVE_MKOSTEMP"]="1"
S["HAVE_MKDTEMP"]="1"
S["HAVE_MBTOWC"]="1"
S["HAVE_DECL_INITSTATE"]="1"
S["HAVE_INITSTATE"]="1"
S["HAVE_GRANTPT"]="1"
S["HAVE_GETSUBOPT"]="1"
S["HAVE_DECL_GETLOADAVG"]="1"
S["HAVE_DECL_GCVT"]="1"
S["HAVE_DECL_FCVT"]="1"
S["HAVE_DECL_ECVT"]="1"
S["HAVE_CANONICALIZE_FILE_NAME"]="1"
S["HAVE_ATOLL"]="1"
S["HAVE_ALIGNED_ALLOC"]="1"
S["HAVE__EXIT"]="1"
S["GL_GNULIB_MDA_PUTENV"]="1"
S["GL_GNULIB_MDA_MKTEMP"]="1"
S["GL_GNULIB_MDA_GCVT"]="1"
S["GL_GNULIB_MDA_FCVT"]="1"
S["GL_GNULIB_MDA_ECVT"]="1"
S["GL_GNULIB_WCTOMB"]="0"
S["GL_GNULIB_UNSETENV"]="0"
S["GL_GNULIB_UNLOCKPT"]="0"
S["GL_GNULIB_SYSTEM_POSIX"]="0"
S["GL_GNULIB_STRTOULL"]="0"
S["GL_GNULIB_STRTOUL"]="0"
S["GL_GNULIB_STRTOLL"]="0"
S["GL_GNULIB_STRTOLD"]="0"
S["GL_GNULIB_STRTOL"]="0"
S["GL_GNULIB_STRTOD"]="0"
S["GL_GNULIB_SETENV"]="0"
S["GL_GNULIB_SECURE_GETENV"]="0"
S["GL_GNULIB_RPMATCH"]="0"
S["GL_GNULIB_REALPATH"]="0"
S["GL_GNULIB_REALLOC_POSIX"]="1"
S["GL_GNULIB_REALLOC_GNU"]="1"
S["GL_GNULIB_REALLOCARRAY"]="1"
S["GL_GNULIB_RANDOM_R"]="0"
S["GL_GNULIB_RANDOM"]="0"
S["GL_GNULIB_QSORT_R"]="0"
S["GL_GNULIB_PUTENV"]="0"
S["GL_GNULIB_PTSNAME_R"]="0"
S["GL_GNULIB_PTSNAME"]="0"
S["GL_GNULIB_POSIX_OPENPT"]="0"
S["GL_GNULIB_POSIX_MEMALIGN"]="0"
S["GL_GNULIB_MKSTEMPS"]="0"
S["GL_GNULIB_MKSTEMP"]="0"
S["GL_GNULIB_MKOSTEMPS"]="0"
S["GL_GNULIB_MKOSTEMP"]="0"
S["GL_GNULIB_MKDTEMP"]="0"
S["GL_GNULIB_MBTOWC"]="1"
S["GL_GNULIB_MALLOC_POSIX"]="1"
S["GL_GNULIB_MALLOC_GNU"]="1"
S["GL_GNULIB_GRANTPT"]="0"
S["GL_GNULIB_GETSUBOPT"]="0"
S["GL_GNULIB_GETLOADAVG"]="0"
S["GL_GNULIB_FREE_POSIX"]="1"
S["GL_GNULIB_CANONICALIZE_FILE_NAME"]="0"
S["GL_GNULIB_CALLOC_POSIX"]="1"
S["GL_GNULIB_CALLOC_GNU"]="1"
S["GL_GNULIB_ATOLL"]="0"
S["GL_GNULIB_ALIGNED_ALLOC"]="0"
S["GL_GNULIB__EXIT"]="0"
S["GL_GNULIB_MDA_WCSDUP"]="1"
S["GL_GNULIB_WCSFTIME"]="0"
S["GL_GNULIB_WCSWIDTH"]="0"
S["GL_GNULIB_WCSTOK"]="0"
S["GL_GNULIB_WCSSTR"]="0"
S["GL_GNULIB_WCSPBRK"]="0"
S["GL_GNULIB_WCSSPN"]="0"
S["GL_GNULIB_WCSCSPN"]="0"
S["GL_GNULIB_WCSRCHR"]="0"
S["GL_GNULIB_WCSCHR"]="0"
S["GL_GNULIB_WCSDUP"]="0"
S["GL_GNULIB_WCSXFRM"]="0"
S["GL_GNULIB_WCSCOLL"]="0"
S["GL_GNULIB_WCSNCASECMP"]="0"
S["GL_GNULIB_WCSCASECMP"]="0"
S["GL_GNULIB_WCSNCMP"]="0"
S["GL_GNULIB_WCSCMP"]="0"
S["GL_GNULIB_WCSNCAT"]="0"
S["GL_GNULIB_WCSCAT"]="0"
S["GL_GNULIB_WCPNCPY"]="0"
S["GL_GNULIB_WCSNCPY"]="0"
S["GL_GNULIB_WCPCPY"]="0"
S["GL_GNULIB_WCSCPY"]="0"
S["GL_GNULIB_WCSNLEN"]="0"
S["GL_GNULIB_WCSLEN"]="0"
S["GL_GNULIB_WMEMSET"]="0"
S["GL_GNULIB_WMEMPCPY"]="1"
S["GL_GNULIB_WMEMMOVE"]="0"
S["GL_GNULIB_WMEMCPY"]="0"
S["GL_GNULIB_WMEMCMP"]="0"
S["GL_GNULIB_WMEMCHR"]="1"
S["GL_GNULIB_WCWIDTH"]="1"
S["GL_GNULIB_WCSNRTOMBS"]="0"
S["GL_GNULIB_WCSRTOMBS"]="0"
S["GL_GNULIB_WCRTOMB"]="1"
S["GL_GNULIB_MBSNRTOWCS"]="0"
S["GL_GNULIB_MBSRTOWCS"]="1"
S["GL_GNULIB_MBRLEN"]="0"
S["GL_GNULIB_MBRTOWC"]="1"
S["GL_GNULIB_MBSINIT"]="1"
S["GL_GNULIB_WCTOB"]="0"
S["GL_GNULIB_BTOWC"]="1"
S["GL_COND_OBJ_BTOWC_FALSE"]=""
S["GL_COND_OBJ_BTOWC_TRUE"]="#"
S["LOCALE_FR"]="fr_FR.ISO8859-1"
S["REPLACE_WCSTOK"]="0"
S["REPLACE_WCSFTIME"]="0"
S["REPLACE_WCSWIDTH"]="0"
S["REPLACE_WCWIDTH"]="1"
S["REPLACE_WCSNRTOMBS"]="0"
S["REPLACE_WCSRTOMBS"]="0"
S["REPLACE_WCRTOMB"]="0"
S["REPLACE_MBSNRTOWCS"]="0"
S["REPLACE_MBSRTOWCS"]="0"
S["REPLACE_MBRLEN"]="0"
S["REPLACE_MBRTOWC"]="0"
S["REPLACE_MBSINIT"]="0"
S["REPLACE_WCTOB"]="0"
S["REPLACE_BTOWC"]="0"
S["REPLACE_MBSTATE_T"]="0"
S["HAVE_DECL_WCWIDTH"]="1"
S["HAVE_DECL_WCSDUP"]="1"
S["HAVE_DECL_WCTOB"]="1"
S["HAVE_WCSFTIME"]="1"
S["HAVE_WCSWIDTH"]="1"
S["HAVE_WCSTOK"]="1"
S["HAVE_WCSSTR"]="1"
S["HAVE_WCSPBRK"]="1"
S["HAVE_WCSSPN"]="1"
S["HAVE_WCSCSPN"]="1"
S["HAVE_WCSRCHR"]="1"
S["HAVE_WCSCHR"]="1"
S["HAVE_WCSDUP"]="1"
S["HAVE_WCSXFRM"]="1"
S["HAVE_WCSCOLL"]="1"
S["HAVE_WCSNCASECMP"]="1"
S["HAVE_WCSCASECMP"]="1"
S["HAVE_WCSNCMP"]="1"
S["HAVE_WCSCMP"]="1"
S["HAVE_WCSNCAT"]="1"
S["HAVE_WCSCAT"]="1"
S["HAVE_WCPNCPY"]="1"
S["HAVE_WCSNCPY"]="1"
S["HAVE_WCPCPY"]="1"
S["HAVE_WCSCPY"]="1"
S["HAVE_WCSNLEN"]="1"
S["HAVE_WCSLEN"]="1"
S["HAVE_WMEMSET"]="1"
S["HAVE_WMEMPCPY"]="0"
S["HAVE_WMEMMOVE"]="1"
S["HAVE_WMEMCPY"]="1"
S["HAVE_WMEMCMP"]="1"
S["HAVE_WMEMCHR"]="1"
S["HAVE_WCSNRTOMBS"]="1"
S["HAVE_WCSRTOMBS"]="1"
S["HAVE_WCRTOMB"]="1"
S["HAVE_MBSNRTOWCS"]="1"
S["HAVE_MBSRTOWCS"]="1"
S["HAVE_MBRLEN"]="1"
S["HAVE_MBRTOWC"]="1"
S["HAVE_MBSINIT"]="1"
S["HAVE_BTOWC"]="1"
S["GL_GENERATE_ALLOCA_H_FALSE"]="#"
S["GL_GENERATE_ALLOCA_H_TRUE"]=""
S["ALLOCA_H"]="alloca.h"
S["HAVE_ALLOCA_H"]="1"
S["ALLOCA"]=""
S["GL_COND_LIBTOOL_FALSE"]=""
S["GL_COND_LIBTOOL_TRUE"]="#"
S["BUILD_SHEBANG"]="/bin/sh"
S["BUILD_EXEEXT"]=""
S["BUILD_CC"]="gcc"
S["LIBUTIL"]=""
S["HELP2MAN"]=""
S["POSUB"]=""
S["LTLIBINTL"]=""
S["LIBINTL"]=""
S["INTLLIBS"]=""
S["LTLIBICONV"]="-liconv"
S["LIBICONV"]="-liconv"
S["INTL_MACOSX_LIBS"]="-Wl,-framework -Wl,CoreFoundation"
S["XGETTEXT_EXTRA_OPTIONS"]=" --flag=argp_error:2:c-format --flag=argp_failure:4:c-format --flag=error:3:c-format --flag=error_at_line:5:c-format"
S["MSGMERGE"]="/opt/homebrew/bin/msgmerge"
S["XGETTEXT_015"]="/opt/homebrew/bin/xgettext"
S["XGETTEXT"]="/opt/homebrew/bin/xgettext"
S["GMSGFMT_015"]="/opt/homebrew/bin/msgfmt"
S["MSGFMT_015"]="/opt/homebrew/bin/msgfmt"
S["GMSGFMT"]="/opt/homebrew/bin/msgfmt"
S["MSGFMT"]="/opt/homebrew/bin/msgfmt"
S["GETTEXT_MACRO_VERSION"]="0.18"
S["USE_NLS"]="no"
S["SED"]="/usr/bin/sed"
S["HAVE_CXX"]="yes"
S["pkgpyexecdir"]="${pyexecdir}/grub"
S["pyexecdir"]="${PYTHON_EXEC_PREFIX}/lib/python2.7/site-packages"
S["pkgpythondir"]="${pythondir}/grub"
S["pythondir"]="${PYTHON_PREFIX}/lib/python2.7/site-packages"
S["PYTHON_EXEC_PREFIX"]="${exec_prefix}"
S["PYTHON_PREFIX"]="${prefix}"
S["PYTHON_PLATFORM"]="darwin"
S["PYTHON_VERSION"]="2.7"
S["PYTHON"]="/usr/bin/python"
S["am__fastdepCCAS_FALSE"]="#"
S["am__fastdepCCAS_TRUE"]=""
S["CCASDEPMODE"]="depmode=gcc3"
S["CCASFLAGS"]=""
S["CCAS"]="gcc"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="-g -O2"
S["CXX"]="g++"
S["ARFLAGS"]="cr"
S["AR"]="ar"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CPP"]="gcc -E"
S["LN_S"]="ln -s"
S["YFLAGS"]=""
S["LEXLIB"]=""
S["LEX_OUTPUT_ROOT"]="lex.yy"
S["LEX"]="flex"
S["RANLIB"]="ranlib"
S["YACC"]="bison"
S["CMP"]="cmp"
S["grubdirname"]="grub"
S["bootdirname"]="boot"
S["platform"]="pc"
S["host_kernel"]="xnu"
S["TARGET_DECOMPRESSOR_LINK_ADDR"]=""
S["TARGET_LINK_ADDR"]=""
S["grub_file"]="grub-file"
S["grub_render_label"]="grub-render-label"
S["grub_sparc64_setup"]="grub-sparc64-setup"
S["grub_set_default"]="grub-set-default"
S["grub_script_check"]="grub-script-check"
S["grub_reboot"]="grub-reboot"
S["grub_probe"]="grub-probe"
S["grub_mkrescue"]="grub-mkrescue"
S["grub_mkrelpath"]="grub-mkrelpath"
S["grub_mkpasswd_pbkdf2"]="grub-mkpasswd-pbkdf2"
S["grub_mklayout"]="grub-mklayout"
S["grub_glue_efi"]="grub-glue-efi"
S["grub_mkimage"]="grub-mkimage"
S["grub_mkfont"]="grub-mkfont"
S["grub_mkconfig"]="grub-mkconfig"
S["grub_install"]="grub-install"
S["grub_editenv"]="grub-editenv"
S["grub_bios_setup"]="grub-bios-setup"
S["PKG_CONFIG_LIBDIR"]=""
S["PKG_CONFIG_PATH"]=""
S["PKG_CONFIG"]="/opt/homebrew/bin/pkg-config"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="1"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["CSCOPE"]="cscope"
S["ETAGS"]="etags"
S["CTAGS"]="ctags"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["am__untar"]="$${TAR-tar} xf -"
S["am__tar"]="$${TAR-tar} chof - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="awk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="../grub/build-aux/install-sh -c -d"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]=""
S["install_sh"]="${SHELL} /Users/watabo/Projects/LonelyOS/grub/build-aux/install-sh"
S["MAKEINFO"]="/usr/bin/makeinfo"
S["AUTOHEADER"]="${SHELL} '/Users/watabo/Projects/LonelyOS/grub/build-aux/missing' autoheader"
S["AUTOMAKE"]="${SHELL} '/Users/watabo/Projects/LonelyOS/grub/build-aux/missing' automake-1.16"
S["AUTOCONF"]="${SHELL} '/Users/watabo/Projects/LonelyOS/grub/build-aux/missing' autoconf"
S["ACLOCAL"]="${SHELL} '/Users/watabo/Projects/LonelyOS/grub/build-aux/missing' aclocal-1.16"
S["VERSION"]="2.11"
S["PACKAGE"]="grub"
S["CYGPATH_W"]="echo"
S["am__isrc"]=" -I$(srcdir)"
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_os"]="elf"
S["target_vendor"]="pc"
S["target_cpu"]="i386"
S["target"]="i686-pc-elf"
S["host_os"]="darwin21.3.0"
S["host_vendor"]="apple"
S["host_cpu"]="aarch64"
S["host"]="aarch64-apple-darwin21.3.0"
S["build_os"]="darwin21.3.0"
S["build_vendor"]="apple"
S["build_cpu"]="aarch64"
S["build"]="aarch64-apple-darwin21.3.0"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]=" -D_FILE_OFFSET_BITS=64"
S["LDFLAGS"]=""
S["CFLAGS"]=""
S["CC"]="gcc"
S["target_alias"]="i686-elf"
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]=""
S["ECHO_C"]="\\c"
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["runstatedir"]="${localstatedir}/run"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="/usr/local/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="/usr/local"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="bug-grub@gnu.org"
S["PACKAGE_STRING"]="GRUB 2.11"
S["PACKAGE_VERSION"]="2.11"
S["PACKAGE_TARNAME"]="grub"
S["PACKAGE_NAME"]="GRUB"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
S["am__quote"]=""
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"GRUB\""
D["PACKAGE_TARNAME"]=" \"grub\""
D["PACKAGE_VERSION"]=" \"2.11\""
D["PACKAGE_STRING"]=" \"GRUB 2.11\""
D["PACKAGE_BUGREPORT"]=" \"bug-grub@gnu.org\""
D["PACKAGE_URL"]=" \"\""
D["HAVE_STDIO_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_FNMATCH_H"]=" 1"
D["HAVE_GETOPT_H"]=" 1"
D["HAVE_SYS_CDEFS_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_XLOCALE_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYSEXITS_H"]=" 1"
D["HAVE_WCTYPE_H"]=" 1"
D["STDC_HEADERS"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_DARWIN_C_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_HPUX_ALT_XOPEN_SOCKET_API"]=" 1"
D["_NETBSD_SOURCE"]=" 1"
D["_OPENBSD_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["__STDC_WANT_IEC_60559_ATTRIBS_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_BFP_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_DFP_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_FUNCS_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_TYPES_EXT__"]=" 1"
D["__STDC_WANT_LIB_EXT2__"]=" 1"
D["__STDC_WANT_MATH_SPEC_FUNCS__"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["PACKAGE"]=" \"grub\""
D["VERSION"]=" \"2.11\""
D["GRUB_BOOT_DIR_NAME"]=" \"boot\""
D["GRUB_DIR_NAME"]=" \"grub\""
D["YYTEXT_POINTER"]=" 1"
D["HAVE_CFPREFERENCESCOPYAPPVALUE"]=" 1"
D["HAVE_CFLOCALECOPYCURRENT"]=" 1"
D["HAVE_ICONV"]=" 1"
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_OFF_T"]=" 8"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_ATEXIT"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_STRUCT_STATFS_F_FSTYPENAME"]=" 1"
D["HAVE_STRUCT_STATFS_F_MNTFROMNAME"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["restrict"]=" __restrict__"
D["HAVE_DECL_CLEARERR_UNLOCKED"]=" 1"
D["HAVE_DECL_FEOF_UNLOCKED"]=" 1"
D["HAVE_DECL_FERROR_UNLOCKED"]=" 1"
D["HAVE_DECL_FFLUSH_UNLOCKED"]=" 0"
D["HAVE_DECL_FGETS_UNLOCKED"]=" 0"
D["HAVE_DECL_FPUTC_UNLOCKED"]=" 0"
D["HAVE_DECL_FPUTS_UNLOCKED"]=" 0"
D["HAVE_DECL_FREAD_UNLOCKED"]=" 0"
D["HAVE_DECL_FWRITE_UNLOCKED"]=" 0"
D["HAVE_DECL_GETC_UNLOCKED"]=" 1"
D["HAVE_DECL_GETCHAR_UNLOCKED"]=" 1"
D["HAVE_DECL_PUTC_UNLOCKED"]=" 1"
D["HAVE_DECL_PUTCHAR_UNLOCKED"]=" 1"
D["HAVE_FLOCKFILE"]=" 1"
D["HAVE_FUNLOCKFILE"]=" 1"
D["HAVE_BTOWC"]=" 1"
D["HAVE_FCHDIR"]=" 1"
D["HAVE_FCNTL"]=" 1"
D["HAVE_SYMLINK"]=" 1"
D["HAVE_FNMATCH"]=" 1"
D["HAVE_MBSRTOWCS"]=" 1"
D["HAVE_GETDELIM"]=" 1"
D["HAVE_GETDTABLESIZE"]=" 1"
D["HAVE_GETPROGNAME"]=" 1"
D["HAVE_ISBLANK"]=" 1"
D["HAVE_MBSINIT"]=" 1"
D["HAVE_MBRTOWC"]=" 1"
D["HAVE_ISASCII"]=" 1"
D["HAVE_MPROTECT"]=" 1"
D["HAVE_NL_LANGINFO"]=" 1"
D["HAVE_LSTAT"]=" 1"
D["HAVE_OPENAT"]=" 1"
D["HAVE_PIPE"]=" 1"
D["HAVE_ISWCTYPE"]=" 1"
D["HAVE_SLEEP"]=" 1"
D["HAVE_STRNDUP"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_WCRTOMB"]=" 1"
D["HAVE_ISWCNTRL"]=" 1"
D["HAVE_WCWIDTH"]=" 1"
D["HAVE_DECL_STRERROR_R"]=" 1"
D["HAVE_STRERROR_R"]=" 1"
D["HAVE_LANGINFO_CODESET"]=" 1"
D["HAVE_MALLOC_POSIX"]=" 1"
D["HAVE_DECL_FCHDIR"]=" 1"
D["HAVE_WORKING_O_NOATIME"]=" 1"
D["HAVE_WORKING_O_NOFOLLOW"]=" 1"
D["HAVE_MBSTATE_T"]=" 1"
D["HAVE_DECL_GETDELIM"]=" 1"
D["HAVE_DECL_GETDTABLESIZE"]=" 1"
D["HAVE_DECL_GETLINE"]=" 1"
D["HAVE_GETOPT_H"]=" 1"
D["HAVE_GETOPT_LONG_ONLY"]=" 1"
D["HAVE_PTHREAD_API"]=" 1"
D["SETLOCALE_NULL_ALL_MTSAFE"]=" 0"
D["SETLOCALE_NULL_ONE_MTSAFE"]=" 1"
D["HAVE_WINT_T"]=" 1"
D["HAVE_LONG_LONG_INT"]=" 1"
D["HAVE_UNSIGNED_LONG_LONG_INT"]=" 1"
D["HAVE_WCHAR_T"]=" 1"
D["USE_POSIX_THREADS"]=" 1"
D["MALLOC_0_IS_NONNULL"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_DECL_MEMRCHR"]=" 0"
D["PROMOTED_MODE_T"]=" int"
D["HAVE_DECL_ALARM"]=" 1"
D["HAVE__BOOL"]=" 1"
D["HAVE_DECL_FCLOSEALL"]=" 0"
D["__USE_MINGW_ANSI_STDIO"]=" 1"
D["HAVE_DECL_ECVT"]=" 1"
D["HAVE_DECL_FCVT"]=" 1"
D["HAVE_DECL_GCVT"]=" 1"
D["HAVE_DECL_STRDUP"]=" 1"
D["REPLACE_STRERROR_0"]=" 1"
D["HAVE_DECL_STRNDUP"]=" 1"
D["HAVE_DECL_STRNLEN"]=" 1"
D["_USE_STD_STAT"]=" 1"
D["HAVE_DECL_EXECVPE"]=" 0"
D["HAVE_INTTYPES_H_WITH_UINTMAX"]=" 1"
D["HAVE_STDINT_H_WITH_UINTMAX"]=" 1"
D["HAVE_INTMAX_T"]=" 1"
D["DBL_EXPBIT0_WORD"]=" 1"
D["DBL_EXPBIT0_BIT"]=" 20"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_STRNLEN"]=" 1"
D["HAVE_WCSLEN"]=" 1"
D["HAVE_WCSNLEN"]=" 1"
D["HAVE_MBRTOWC"]=" 1"
D["HAVE_WCRTOMB"]=" 1"
D["HAVE_DECL__SNPRINTF"]=" 0"
D["HAVE_SNPRINTF_RETVAL_C99"]=" 1"
D["HAVE_SNPRINTF_TRUNCATION_C99"]=" 1"
D["HAVE_DECL_VSNPRINTF"]=" 1"
D["HAVE_DECL_WCSDUP"]=" 1"
D["HAVE_TOWLOWER"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_NAME"]=" 0"
D["GNULIB_PROGRAM_INVOCATION_NAME"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME"]=" 0"
D["GNULIB_PROGRAM_INVOCATION_SHORT_NAME"]=" 1"
D["GNULIB_TEST_BTOWC"]=" 1"
D["HAVE___BUILTIN_EXPECT"]=" 1"
D["GNULIB_TEST_CALLOC_GNU"]=" 1"
D["GNULIB_TEST_CALLOC_POSIX"]=" 1"
D["GNULIB_TEST_CHDIR"]=" 1"
D["GNULIB_TEST_CLOEXEC"]=" 1"
D["GNULIB_TEST_CLOSE"]=" 1"
D["HAVE_DIRFD"]=" 1"
D["HAVE_DECL_DIRFD"]=" 1"
D["GNULIB_TEST_DIRFD"]=" 1"
D["GNULIB_TEST_DUP2"]=" 1"
D["GNULIB_TEST_FCHDIR"]=" 1"
D["GNULIB_TEST_FCNTL"]=" 1"
D["GNULIB_FD_SAFER_FLAG"]=" 1"
D["FLEXIBLE_ARRAY_MEMBER"]=" /**/"
D["GNULIB_TEST_FNMATCH"]=" 1"
D["GNULIB_TEST_FREE_POSIX"]=" 1"
D["GNULIB_TEST_FSTAT"]=" 1"
D["GNULIB_TEST_GETCWD"]=" 1"
D["GNULIB_TEST_GETDELIM"]=" 1"
D["GNULIB_TEST_GETDTABLESIZE"]=" 1"
D["GNULIB_TEST_GETLINE"]=" 1"
D["__GETOPT_PREFIX"]=" rpl_"
D["GNULIB_TEST_GETOPT_POSIX"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_NAME"]=" 0"
D["HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME"]=" 0"
D["HAVE_DECL___ARGV"]=" 0"
D["HAVE_VAR___PROGNAME"]=" 1"
D["GNULIB_ISBLANK"]=" 1"
D["HAVE___INLINE"]=" 1"
D["GNULIB_TEST_LOCALECONV"]=" 1"
D["HAVE_PTHREAD_RWLOCK"]=" 1"
D["HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER"]=" 1"
D["HAVE_PTHREAD_MUTEX_RECURSIVE"]=" 1"
D["GNULIB_LOCK"]=" 1"
D["GNULIB_TEST_MALLOC_GNU"]=" 1"
D["GNULIB_TEST_MALLOC_POSIX"]=" 1"
D["GNULIB_TEST_MBRTOWC"]=" 1"
D["GNULIB_TEST_MBSINIT"]=" 1"
D["GNULIB_TEST_MBSRTOWCS"]=" 1"
D["HAVE_DECL_MBSWIDTH_IN_WCHAR_H"]=" 0"
D["HAVE_MBSTATE_T"]=" 1"
D["HAVE_MBTOWC"]=" 1"
D["GNULIB_TEST_MBTOWC"]=" 1"
D["GNULIB_TEST_MEMCHR"]=" 1"
D["GNULIB_TEST_MEMPCPY"]=" 1"
D["GNULIB_TEST_MEMRCHR"]=" 1"
D["GNULIB_MSVC_NOTHROW"]=" 1"
D["FUNC_NL_LANGINFO_YESEXPR_WORKS"]=" 1"
D["NL_LANGINFO_MTSAFE"]=" 1"
D["REPLACE_NL_LANGINFO"]=" 1"
D["GNULIB_TEST_NL_LANGINFO"]=" 1"
D["OPEN_TRAILING_SLASH_BUG"]=" 1"
D["GNULIB_TEST_OPEN"]=" 1"
D["GNULIB_OPENAT"]=" 1"
D["GNULIB_TEST_OPENAT"]=" 1"
D["GNULIB_TEST_PIPE"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_NAME"]=" 0"
D["HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME"]=" 0"
D["GNULIB_TEST_RAWMEMCHR"]=" 1"
D["GNULIB_TEST_REALLOC_GNU"]=" 1"
D["GNULIB_TEST_REALLOC_POSIX"]=" 1"
D["GNULIB_REALLOCARRAY"]=" 1"
D["GNULIB_TEST_REALLOCARRAY"]=" 1"
D["_REGEX_INCLUDE_LIMITS_H"]=" 1"
D["_REGEX_LARGE_OFFSETS"]=" 1"
D["re_syntax_options"]=" rpl_re_syntax_options"
D["re_set_syntax"]=" rpl_re_set_syntax"
D["re_compile_pattern"]=" rpl_re_compile_pattern"
D["re_compile_fastmap"]=" rpl_re_compile_fastmap"
D["re_search"]=" rpl_re_search"
D["re_search_2"]=" rpl_re_search_2"
D["re_match"]=" rpl_re_match"
D["re_match_2"]=" rpl_re_match_2"
D["re_set_registers"]=" rpl_re_set_registers"
D["re_comp"]=" rpl_re_comp"
D["re_exec"]=" rpl_re_exec"
D["regcomp"]=" rpl_regcomp"
D["regexec"]=" rpl_regexec"
D["regerror"]=" rpl_regerror"
D["regfree"]=" rpl_regfree"
D["HAVE_DECL_ISBLANK"]=" 1"
D["SETLOCALE_NULL_ALL_MTSAFE"]=" 0"
D["SETLOCALE_NULL_ONE_MTSAFE"]=" 1"
D["HAVE_VISIBILITY"]=" 1"
D["GNULIB_TEST_SETLOCALE_NULL"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_DECL_SLEEP"]=" 1"
D["GNULIB_TEST_SLEEP"]=" 1"
D["REPLACE_FUNC_STAT_FILE"]=" 1"
D["GNULIB_TEST_STAT"]=" 1"
D["HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC"]=" 1"
D["HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC"]=" 1"
D["GNULIB_TEST_FSCANF"]=" 1"
D["GNULIB_FSCANF"]=" 1"
D["GNULIB_TEST_SCANF"]=" 1"
D["GNULIB_SCANF"]=" 1"
D["GNULIB_TEST_FGETC"]=" 1"
D["GNULIB_TEST_GETC"]=" 1"
D["GNULIB_TEST_GETCHAR"]=" 1"
D["GNULIB_TEST_FGETS"]=" 1"
D["GNULIB_TEST_FREAD"]=" 1"
D["GNULIB_TEST_FPRINTF"]=" 1"
D["GNULIB_TEST_PRINTF"]=" 1"
D["GNULIB_TEST_VFPRINTF"]=" 1"
D["GNULIB_TEST_VPRINTF"]=" 1"
D["GNULIB_TEST_FPUTC"]=" 1"
D["GNULIB_TEST_PUTC"]=" 1"
D["GNULIB_TEST_PUTCHAR"]=" 1"
D["GNULIB_TEST_FPUTS"]=" 1"
D["GNULIB_TEST_PUTS"]=" 1"
D["GNULIB_TEST_FWRITE"]=" 1"
D["HAVE_STRCASECMP"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HAVE_DECL_STRNCASECMP"]=" 1"
D["GNULIB_TEST_STRCHRNUL"]=" 1"
D["GNULIB_TEST_STRDUP"]=" 1"
D["GNULIB_STRERROR"]=" 1"
D["GNULIB_TEST_STRERROR"]=" 1"
D["GNULIB_TEST_STRNDUP"]=" 1"
D["GNULIB_TEST_STRNLEN"]=" 1"
D["HAVE_C_VARARRAYS"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["GNULIB_TEST_VSNPRINTF"]=" 1"
D["GNULIB_TEST_WCRTOMB"]=" 1"
D["HAVE_DECL_WCWIDTH"]=" 1"
D["GNULIB_TEST_WCWIDTH"]=" 1"
D["GNULIB_TEST_WMEMCHR"]=" 1"
D["GNULIB_TEST_WMEMPCPY"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_LIBLZMA"]=" 1"
D["LOCALEDIR"]=" \"/usr/local/share/locale\""
D["GRUB_LIBDIR"]=" \"/usr/local/lib\""
D["GRUB_DATADIR"]=" \"/usr/local/share\""
D["GRUB_SYSCONFDIR"]=" \"/usr/local/etc\""
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`printf "%s\n" "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  printf "%s\n" "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
printf "%s\n" "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`printf "%s\n" "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
printf "%s\n" "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&/usr/local/share&g' ;;
esac
ac_sed_extra="

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
printf "%s\n" "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
printf "%s\n" "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
printf "%s\n" "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;
  :C)  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
printf "%s\n" "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  case $CONFIG_FILES in #(
  *\'*) :
    eval set x "$CONFIG_FILES" ;; #(
  *) :
    set x $CONFIG_FILES ;; #(
  *) :
     ;;
esac
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`printf "%s\n" "$am_mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`$as_dirname -- "$am_mf" ||
$as_expr X"$am_mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$am_mf" : 'X\(//\)[^/]' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$am_mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    am_filepart=`$as_basename -- "$am_mf" ||
$as_expr X/"$am_mf" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$am_mf" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    { echo "$as_me:$LINENO: cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles" >&5
   (cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } || am_rc=$?
  done
  if test $am_rc -ne 0; then
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE=\"gmake\" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).
See \`config.log' for more details" "$LINENO" 5; }
  fi
  { am_dirpart=; unset am_dirpart;}
  { am_filepart=; unset am_filepart;}
  { am_mf=; unset am_mf;}
  { am_rc=; unset am_rc;}
  rm -f conftest-deps.mk
}
 ;;
    "po-directories":C)
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          gt_tab=`printf '\t'`
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            # Hide the ALL_LINGUAS assignment from automake < 1.5.
            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            # Hide the ALL_LINGUAS assignment from automake < 1.5.
            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done ;;
    "stamp-h":F) echo timestamp > stamp-h ;;

  esac
done # for ac_tag


as_fn_exit 0
